/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define DFT 0
#define BTH 1
#define ITP 2
#define NAV 3
#define NUM 4
/* todo
    copy, paste, cut
    media controls
    bluetooth
    editor shortcuts
*/


/ {
    #include "shortcut_macros.dtsi"
    #include "nav_macros.dtsi"
    
    conditional_layers {
        compatible = "zmk,conditional-layers";
        func_layer {
            if-layers = <NAV ITP>;
            then-layer = <NUM>;
        };
    };
    
    behaviors {
        hrm: home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <260>;
            bindings = <&kp>, <&kp>;
            display-name = "Homerow-mod";
            hold-trigger-on-release;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <131>;
        };
        
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&tog>, <&kp>;
            flavor = "tap-preferred";
            tapping-term-ms = <500>;
            display-name = "Hold-Tap";
        };
    };
    
    keymap {
        compatible = "zmk,keymap";
        

        
        default_layer {
            bindings = <
                &kp TAB   &kp Q &kp W &kp E     &kp R   &kp T     &kp Y     &kp U   &kp I     &kp O   &kp P    &kp BSPC 
                &kp LCTRL &kp A &kp S &kp D     &kp F   &kp G     &kp H     &kp J   &kp K     &kp L   &kp SEMI &kp DEL 
                &kp LALT  &kp Z &kp X &kp C     &kp V   &kp B     &kp N     &kp M   &kp COMMA &kp DOT &kp DQT  &kp ENTER
                                      &kp LSHFT &mo NAV &mo NUM   &kp SPACE &mo ITP &kp ESC
           >;
        };
        
        
        bluetooth_layer {
            bindings = <
                &none &none        &none        &none        &none        &none          &bt BT_CLR     &none &bt BT_NXT &none &none &none
                &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &bt BT_CLR_ALL &none &bt BT_PRV &none &none &to DFT
                &none &none        &none        &none        &none        &none          &none          &none &none      &none &none &none
                                                &none        &none        &none          &none          &none &none
           >;
        };

        interp_layer {
            bindings = <
                &trans &kp TAB   &kp LBKT  &kp LPAR &kp PLUS  &kp PRCNT   &kp AMPS  &kp MINUS &kp RPAR &kp RBKT &kp BSPC &trans 
                &trans &kp EQUAL &kp GRAVE &kp LBRC &kp ASTRK &kp DLLR    &kp AT    &kp UNDER &kp RBRC &kp BSLH &kp FSLH &trans 
                &trans &kp COLON &kp LT    &kp HASH &kp EXCL  &kp TILDE   &kp CARET &kp QMARK &kp PIPE &kp GT   &kp SQT  &trans 
                                           &trans   &kp DEL   &kp ESC     &trans    &trans    &trans
           >;
        };
        
        nav_layer {
            bindings = <
                &trans &l_sel_l &w_sel_l &w_sel_r &l_sel_r &none      &none     &none    &none    &kp DEL &kp BSPC  &trans 
                &trans &l_mov_l &w_mov_l &w_mov_r &l_mov_r &none      &kp PG_UP &kp LEFT &kp DOWN &kp UP  &kp RIGHT &trans 
                &trans &l_del_l &w_del_l &w_del_r &l_del_r &kp LSHFT  &kp PG_DN &none    &none    &none   &none     &trans 
                                         &trans    &trans   &trans     &trans    &trans   &trans
           >;
        };

        number_layer {
            bindings = <
                &trans &kp F1     &kp F2  &kp F3 &kp F4  &kp F5    &kp F6 &kp F7  &kp F8 &kp F9 &kp F10 &trans 
                &trans &kp N1     &kp N2  &kp N3 &kp N4  &kp N5    &kp N6 &kp N7  &kp N8 &kp N9 &kp N0  &trans
                &trans &ht BTH X  &none   &none  &kp F11 &none     &none  &kp F12 &none  &none  &none   &trans 
                                          &trans &trans  &trans    &trans &trans  &trans
           >;
        };
    };
};
